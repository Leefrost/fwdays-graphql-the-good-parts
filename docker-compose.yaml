services:
  # gateway-api:
  #   container_name: fwdays-gateway-api
  #   image: fwdays-gateway-api
  #   build:
  #     context: ./src/FWDays.Gateway
  #     dockerfile: Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_HTTP_PORTS=8080
  #     - ASPNETCORE_HTTP_PORTS=8081
  #   ports:
  #     - 8080:8080
  #     - 8081:8081
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  #   depends_on:
  #     - db
  
  speakers-api:
    container_name: fwdays-speakers-api
    image: fwdays-speakers-api
    build:
      context: .
      dockerfile: ./src/FWDays.Speakers/Dockerfile
    environment:
      - ConnectionStrings__Database=Host=192.168.0.105;Port=6432;Database=fwdays-2024;User ID=fwduser;Password=fwdpass;
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - 9001:8080
    depends_on:
      - db

  tracks-api:
    container_name: fwdays-tracks-api
    image: fwdays-tracks-api
    build:
      context: .
      dockerfile: ./src/FWDays.Tracks/Dockerfile
    environment:
      - ConnectionStrings__Database=Host=192.168.0.105;Port=6432;Database=fwdays-2024;User ID=fwduser;Password=fwdpass;
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - 9002:8080
    depends_on:
      - db

  participants-api:
    container_name: fwdays-participants-api
    image: fwdays-participants-api
    build:
      context: .
      dockerfile: ./src/FWDays.Participants/Dockerfile
    environment:
      - ConnectionStrings__Database=Host=192.168.0.105;Port=6432;Database=fwdays-2024;User ID=fwduser;Password=fwdpass;
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - 9003:8080
    depends_on:
      - db

  db:
    image: postgres:16.1-alpine3.18
    environment:
      POSTGRES_DB: "fwdays-2024"
      POSTGRES_USER: "fwduser"
      POSTGRES_PASSWORD: "fwdpass"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "6432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fwduser -d fwdays-2024"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G